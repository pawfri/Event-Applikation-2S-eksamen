// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;

namespace Event_Applikation.Models;

public partial class mvp2_dk_db_eventapplikationContext : DbContext
{
    private readonly IConfiguration _configuration;

    public mvp2_dk_db_eventapplikationContext()
    {
    }

    public mvp2_dk_db_eventapplikationContext(DbContextOptions<mvp2_dk_db_eventapplikationContext> options, IConfiguration configuration)
        : base(options)
    {
        _configuration = configuration;
    }

    public virtual DbSet<Bruger> Brugers { get; set; }
    public virtual DbSet<Campus> Campuses { get; set; }
    public virtual DbSet<CampusHarLagerbeholdning> CampusHarLagerbeholdnings { get; set; }
    public virtual DbSet<Event> Events { get; set; }
    public virtual DbSet<Kategori> Kategoris { get; set; }
    public virtual DbSet<Nyheder> Nyheders { get; set; }
    public virtual DbSet<Rolle> Rolles { get; set; }
    public virtual DbSet<Tilmelding> Tilmeldings { get; set; }
    public virtual DbSet<Vare> Vares { get; set; }
    public virtual DbSet<VareType> VareTypes { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        if (!optionsBuilder.IsConfigured)
        {
            optionsBuilder.UseSqlServer(_configuration.GetConnectionString("DefaultConnection"));
        }
    }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Bruger>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Bruger__3214EC079DB6731C");
            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.HasOne(d => d.Campus).WithMany(p => p.Brugers).HasConstraintName("FK__Bruger__CampusId__68487DD7");
            entity.HasOne(d => d.Rolle).WithMany(p => p.Brugers).HasConstraintName("FK__Bruger__RolleId__693CA210");

            entity.HasMany(d => d.Events).WithMany(p => p.Brugers)
                .UsingEntity<Dictionary<string, object>>(
                    "BrugerAdministrererEvent",
                    r => r.HasOne<Event>().WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__BrugerAdm__Event__60A75C0F"),
                    l => l.HasOne<Bruger>().WithMany()
                        .HasForeignKey("BrugerId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__BrugerAdm__Bruge__5FB337D6"),
                    j =>
                    {
                        j.HasKey("BrugerId", "EventId").HasName("PK__BrugerAd__7836B7919142DBA4");
                        j.ToTable("BrugerAdministrererEvent");
                    });
        });

        modelBuilder.Entity<Campus>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Campus__3214EC079F7AF461");
            entity.Property(e => e.Id).ValueGeneratedNever();
        });

        modelBuilder.Entity<CampusHarLagerbeholdning>(entity =>
        {
            entity.HasKey(e => new { e.VareId, e.CampusId }).HasName("PK__CampusHa__9E3082DC3C89409E");

            entity.HasOne(d => d.Campus).WithMany(p => p.CampusHarLagerbeholdnings)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__CampusHar__Campu__6754599E");

            entity.HasOne(d => d.Vare).WithMany(p => p.CampusHarLagerbeholdnings)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__CampusHar__VareI__66603565");
        });

        modelBuilder.Entity<Event>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Event__3214EC07B5FE1D14");
            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.HasOne(d => d.Kategori).WithMany(p => p.Events)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Event__KategoriI__4CA06362");
        });

        modelBuilder.Entity<Kategori>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Kategori__3214EC074B276EE5");
            entity.Property(e => e.Id).ValueGeneratedNever();
        });

        modelBuilder.Entity<Nyheder>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Nyheder__3214EC07F5CCCF63");
            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.HasOne(d => d.Event).WithMany(p => p.Nyheders)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Nyheder__EventId__571DF1D5");
        });

        modelBuilder.Entity<Rolle>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Rolle__3214EC07F4DE1397");
            entity.Property(e => e.Id).ValueGeneratedNever();
        });

        modelBuilder.Entity<Tilmelding>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Tilmeldi__3214EC07029E17DD");
            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.HasOne(d => d.Bruger).WithMany(p => p.Tilmeldings)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Tilmeldin__Bruge__59FA5E80");

            entity.HasOne(d => d.Event).WithMany(p => p.Tilmeldings)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Tilmeldin__Event__5AEE82B9");
        });

        modelBuilder.Entity<Vare>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Vare__3214EC07D8B04A2E");
            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.HasOne(d => d.VareType).WithMany(p => p.Vares)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Vare__VareTypeId__6383C8BA");
        });

        modelBuilder.Entity<VareType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__VareType__3214EC076675B7D6");
            entity.Property(e => e.Id).ValueGeneratedNever();
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}